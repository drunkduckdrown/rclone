# .github/workflows/build-openlist-support.yml

name: Build rclone for Windows (openlist-support branch)

on:
  push:
    branches:
      - 'openlist-support'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: ubuntu-latest

    steps:
      # 第 1 步：检出代码
      # 关键：使用 fetch-depth: 0 来获取完整的 git 历史和 tags
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 第 2 步：安装 Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      # 第 3 步：编译 rclone (分步进行)
      # 这个版本现在可以完美工作了！
      - name: Build rclone for Windows (amd64)
        id: build
        run: |
          # 1. git describe 现在可以成功获取版本号了！
          RCLONE_VERSION=$(git describe --tags)
          echo "Building version: $RCLONE_VERSION"
          echo "full_version=$RCLONE_VERSION" >> "$GITHUB_OUTPUT"
          
          # 2. 生成 Windows 资源文件 (不会再报格式错误)
          echo "Generating Windows resource file..."
          go run bin/resource_windows.go -version "$RCLONE_VERSION" -syso resource_windows_amd64.syso
          
          # 3. 交叉编译 rclone 主程序
          echo "Cross-compiling rclone for Windows..."
          GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -v -o rclone.exe -ldflags "-s -w -X github.com/rclone/rclone/fs.Version=$RCLONE_VERSION"

      # 第 4 步：上传编译好的二进制文件
      - name: Upload Windows binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: rclone-windows-amd64-${{ steps.build.outputs.full_version }}
          path: ./rclone.exe
